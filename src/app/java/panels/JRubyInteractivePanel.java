/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 *
 * Copyright:: (c) Kubris & Autotelik Media Ltd 2008
 * Author ::   Tom Statter
 * Date ::     24-Apr-2009, 16:27:04
 * License::   MIT ?
 * CalypsoInteractiveConnection.java
 *
 * /**
 * IRB window.
 * This class is heavily based on IrbTopComponent from Netbeans and IRBConsole
 * in the JRuby distribution,
 *
 * These todos are from IrbTopComponent.java but may be worth looking at also ..
 * 
 * @todo Use the equivalent of "jirb -rirb/completion" to get autocompletion?
 *    (include "irb/completion"). See http://jira.codehaus.org/browse/JRUBY-389?page=all
 * @todo It might be interesting to set the mime type of the embedded
 *   text pane to Ruby, and see if syntax highlighting works. Might
 *   need some tweaks, e.g. a derived mode for shell ruby.
 *   Also, if the TextAreaReadline messes with attributes in the StyledDocument,
 *   we're hosed. The NetBeans editor GuardedDocument implementation does not like that.
 * @todo Use output2's APIs: AbstractOutputTab - it has a lot of good
 *   logic for keeping the pane scrolled to track output, locking the caret on the
 *   last line, etc.
 */
package app.java.panels;

import javax.swing.JTextPane;

/**
 *
 * @author tom
 */
public class JRubyInteractivePanel extends javax.swing.JPanel
{
  /** Creates new form CalypsoInteractiveConnection */
  public JRubyInteractivePanel() {
    initComponents();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jriToolBar = new javax.swing.JToolBar();
        newButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jriDesktopPane = new javax.swing.JDesktopPane();

        setPreferredSize(new java.awt.Dimension(760, 440));

        jriToolBar.setRollover(true);

        newButton.setText("New");
        newButton.setFocusable(false);
        newButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jriToolBar.add(newButton);

        saveButton.setText("Save");
        saveButton.setFocusable(false);
        saveButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jriToolBar.add(saveButton);

        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane1.setOpaque(false);

        jriDesktopPane.setBorder(new javax.swing.border.MatteBorder(null));
        jScrollPane1.setViewportView(jriDesktopPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jriToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 789, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 789, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jriToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(620, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(22, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDesktopPane jriDesktopPane;
    private javax.swing.JToolBar jriToolBar;
    private javax.swing.JButton newButton;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables

}
